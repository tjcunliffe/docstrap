name: Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry==1.7.1

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    # Run formatters first to ensure consistent code style
    - name: Run black
      run: poetry run black . --check

    - name: Run isort
      run: poetry run isort . --check-only --profile black

    # Run type checking and linting after formatting
    - name: Run mypy
      run: |
        poetry run mypy src/docstrap \
          --python-version=3.9 \
          --warn-return-any \
          --warn-unused-configs \
          --disallow-untyped-defs \
          --disallow-incomplete-defs \
          --check-untyped-defs \
          --disallow-untyped-decorators \
          --no-implicit-optional \
          --warn-redundant-casts \
          --warn-unused-ignores \
          --warn-no-return \
          --warn-unreachable

    - name: Run pylint
      run: |
        poetry run pylint src/docstrap \
          --disable=C0111,R0903 \
          --max-line-length=88

    # Run tests last since they depend on all previous steps
    - name: Run tests
      run: |
        poetry run pytest \
          --verbose \
          --capture=no \
          -k "not TestInteractiveFileHandler"
